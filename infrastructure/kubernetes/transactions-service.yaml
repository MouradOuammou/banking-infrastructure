apiVersion: apps/v1
kind: Deployment
metadata:
  name: transactions-service
  namespace: banking
  labels:
    app: transactions-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: transactions-service
  template:
    metadata:
      labels:
        app: transactions-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8083"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      serviceAccountName: banking-service-account
      containers:
      - name: transactions-service
        image: transactions-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8083
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "docker"
        - name: SERVER_PORT
          value: "8083"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://postgresql.database.svc.cluster.local:5432/transactions_service"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: password
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          value: "banking-kafka-kafka-bootstrap.kafka.svc.cluster.local:9092"
        - name: AUTH_SERVICE_URL
          value: "http://auth-service:8081"
        - name: ACCOUNTS_SERVICE_URL
          value: "http://accounts-service:8082"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8083
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8083
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: transactions-service
  namespace: banking
  labels:
    app: transactions-service
spec:
  selector:
    app: transactions-service
  ports:
  - port: 8083
    targetPort: 8083
    name: http
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: transactions-service-ingress
  namespace: banking
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: transactions.banking.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: transactions-service
            port:
              number: 8083
